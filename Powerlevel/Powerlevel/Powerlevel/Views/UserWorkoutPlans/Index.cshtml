@model IEnumerable<Powerlevel.Models.UserWorkoutPlan>
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Personal Workout Plan";
}

<h2>Personal Workout Plan</h2>
@*request the user to be logged-in. Else, ask go to login page*@
@if (Request.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Choose Plans", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.UserName).ToString(), "Index", new { sortOrder = ViewBag.UserNameSortParm })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.Name).ToString(), "Index", new { sortOrder = ViewBag.PlanNameSortParm })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.Type).ToString(), "Index", new { sortOrder = ViewBag.TypeSortParm })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.Description).ToString(), "Index", new { sortOrder = ViewBag.DescriptionSortParm })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.DaysToComplete).ToString(), "Index", new { sortOrder = ViewBag.DaysSortParm })
            </th>
            <th>
                @Html.ActionLink(@Html.DisplayNameFor(model => model.NumberOfWorkouts).ToString(), "Index", new { sortOrder = ViewBag.NumWorkoutsSortParm })

            </th>
            <th></th>
        </tr>

        @*show only the user stuff*@
        @foreach (var item in Model.Where(x => x.UserName == @User.Identity.GetUserName()))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DaysToComplete)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfWorkouts)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.PlanId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.PlanId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.PlanId })
                </td>
            </tr>
        }
    </table>
}

@*Else, ask them to login*@
else
{
    <p>
        You must be @Html.ActionLink("Logged In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
        to view User Workout Plans.
    </p>
}