@model Powerlevel.Models.UserCurrWorkout

@{
    ViewBag.Title = "Finish Stage";
}

<h2>Finish Exercise Stage in Workout</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UCWId)

    @* Controller logic sets the User connected to Workout to Currently logged in user so no need to give them option to set this  *@
    <input type="hidden" name="UserId" value="@ViewBag.UserId" />

    <div class="form-group">
        <div class="col-md-10">
            
            @Html.TextBoxFor(model => model.UserActiveWorkout, null, htmlAttributes: new { @class = "form-control", @type = "hidden", @Value = Model.UserActiveWorkout + 1, @readonly = "readonly"})

            @Html.ValidationMessageFor(model => model.UserActiveWorkout, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-actions no-color">

        <!-- User must "Confirm" they did an exercise, via checkbox -->
        Please check the box if you have completed <b>@Html.DisplayFor(model => model.WorkoutExercise.Exercise.Name)</b> @Html.CheckBox("Confirm Complete", new { @required = "required" })
        <input type="submit" value="Confirm" class="btn btn-primary" />

    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
