@model Powerlevel.Models.UserCurrWorkout

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserCurrWorkout</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @* Controller logic sets the User connected to Workout to Currently logged in user so no need to give them option to set this  *@
                <input type="hidden" name="UserId" value="@ViewBag.UserId" />

        <div class="form-group">
            @Html.LabelFor(model => model.UserActiveWorkout, "UserActiveWorkout", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserActiveWorkout", null, htmlAttributes: new { @class = "form-control" })

                @*  I cannot use this code for now as it correctly displays available workouts but does not successfully save changes to database
        Html.DropDownList("AvailableWorkouts", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.UserActiveWorkout, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
