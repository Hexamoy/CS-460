@model IEnumerable<Powerlevel.Models.UserCurrWorkout>

@{
    ViewBag.Title = "Workout Select";
}

@if (Request.IsAuthenticated)
{
    <h1>Workout Page for @User.Identity.Name </h1>
    <br />

    //This segment of code checks if the logged in user has an active workout, if so, the "Start a New Workout" button will not appear
    int loggedInId = 0;
    foreach (var item in Model)
    {
        if (item.User.UserName == User.Identity.Name)
        {
            loggedInId = item.UserId;
        }
    }
    bool startNewWorkout = true;
    foreach (var item in Model)
    {
        if (loggedInId == item.User.UserId)
        {
            startNewWorkout = false;
        }
    }
    if (startNewWorkout == true)
    {
        <p>
            It looks like you don't have an Active Workout! @Html.ActionLink("Start a New Workout Now!", "Create")
        </p>
    }
    //End of segment of code checking if active workouts exist

    if (startNewWorkout == false)
    {


        foreach (var item in Model)
        {
            //Initialize variables
            double finalStage = 0;
            double percentStage = 0.0;
            string percentString;

            <!-- finalStage checks the current workout the user is on and is set to the number that is the last stage of the workout, so that
                the user can complete it when they reach that point, this variable has to be coded based on how many steps each workout is-->
            <!--
                CURRENT WORKOUTS:
                UPPER-BODY HELLHOLE: ActiveWorkouts 1-3, Total of 3 Stages
                BURNING BACK: ActiveWorkouts 4-6, Total of 3 Stages
            -->
            if (item.UserActiveWorkout >= 1 && item.UserActiveWorkout <= 6)
            {
                finalStage = 3;
            }
            <!-- If-statement checks currently logged in user with each user workout to prevent other users from seeing/editing anothers workout -->
            if (item.User.UserName == User.Identity.Name)
            {
                <h4>
                    <b>Current Workout:</b> @Html.ActionLink(item.WorkoutExercise.Workout.Name, "WorkoutList", "Exercise", new { id = item.WorkoutExercise.WorkoutId }, null)
                </h4>
                <h4>
                    <b>Current Exercise in Workout:</b> @Html.ActionLink(item.WorkoutExercise.Exercise.Name, "Details", "Exercise", new { id = item.WorkoutExercise.ExerciseId }, null)
                </h4>
                <h4>
                    <b>Stage:</b> @Html.DisplayFor(modelItem => item.WorkoutExercise.OrderNumber) of
                    @* This finds the highest value OrderNumber in a workout so that it displays how many stages are in the Users Workout*@
                    @foreach (var item2 in Model)
                    {
                        if (item2.WorkoutExercise.OrderNumber.Value > finalStage)
                        {
                            finalStage = item2.WorkoutExercise.OrderNumber.Value;
                        }
                    }
                    @finalStage

                    @if (1 == 1) //If-statement is just to get the C# code to work properly, math inside gets a percentage based on current stage User is on
                    {
                        percentStage = (item.WorkoutExercise.OrderNumber.Value - 1) / finalStage;
                        percentString = percentStage.ToString("#0.##%");
                    }
                </h4>

                <div id="wholeBar" style="width:100%; background-color:#E7E7E7; border-style:solid">
                    <div id="percentBar" style="width:@percentString;height:30px; background-color:#38FF37;"><p style="text-align:center; font-size:20px; font-family:'Comic Sans MS'"><b>@percentString</b></p></div>
                </div>

                <h4>
                    @*
                                We wont use these for now:
                        @Html.ActionLink("Details", "Details", new { id = item.UCWId }) |
                    *@

                    <!-- Checks if the current Exercise is in the final stage of the Workout before allowing Completion -->
                    @if (item.WorkoutExercise.OrderNumber == finalStage)
                    {
                        <b>@Html.ActionLink("Complete", "Complete", new { id = item.UCWId })</b> @: |
                    }


                    @if (item.WorkoutExercise.OrderNumber != finalStage)
                    {
                        @Html.ActionLink("Finish Stage", "Edit", new { id = item.UCWId }) @:|
                    }


                    @Html.ActionLink("Abandon", "Abandon", new { id = item.UCWId })


                </h4>
            }

        }
    }
}

else
{
    <h1>User Workout Page</h1>
    <p>
        You must be @Html.ActionLink("Logged In", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
        to view or start your Workout.
    </p>
}